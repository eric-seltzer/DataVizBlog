[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/tech-stock/tech-stock.html",
    "href": "posts/tech-stock/tech-stock.html",
    "title": "Finding Indicators for Stock Prices",
    "section": "",
    "text": "Introduction:\nAfter finding a data set showing the stock prices of big tech companies, I decided I wanted to investigate to see if there were any correlations to find trends in how their prices perform. This dataset began in 2010 and went to January of 2023 so I decided to cut down the time frame to the most recent five years. I also chose to use the six companies in this dataset with the highest observed closing prices. This allows for less clutter in my visualizations.\n\npricesNew &lt;-\n  prices |&gt;\n  filter(date &gt; '2018-01-01')\n\nprices |&gt;\n  group_by(stock_symbol) |&gt;\n  summarise(max = max(close)) |&gt;\n  arrange(desc(max)) |&gt;\n  head(n = 6)\n\n# A tibble: 6 × 2\n  stock_symbol   max\n  &lt;chr&gt;        &lt;dbl&gt;\n1 NFLX          692.\n2 ADBE          688.\n3 TSLA          410.\n4 META          382.\n5 MSFT          343.\n6 NVDA          334.\n\npricesNew &lt;- \n  pricesNew|&gt;\n  group_by(stock_symbol) |&gt;\n  filter(stock_symbol == c(\"NFLX\", \"ADBE\", \"TSLA\", \"MSFT\", \"NVDA\", \"META\"))\n\n\nPlot 1\n\npricesNew |&gt;\n  ggplot(aes(x = date,\n             y = close)) +\n  geom_line(aes(color = stock_symbol),\n            linewidth = .9) +\n  scale_color_brewer(palette = \"Paired\") + \n  labs(x = \"Date\",\n       y = \"Closing Price ($)\",\n       title = \"Closing Stock Prices from 6 Big Tech Companies, 2018-2023\",\n       color = \"Tickers\",\n       caption = \"(based on data from Yahoo Finance via Kaggle)\") +\n  scale_x_date(date_minor_breaks = \"6 months\",\n               date_breaks = \"1 year\",\n               date_labels = \"%b %y\") +\n  theme(axis.text.x = element_text(angle = 45,\n                                   hjust = 1,\n                                   vjust = 1),\n        plot.title = element_text(size = 16,\n                                  hjust = 0),\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 14))\n\n\n\n\nMy first plot shows the change in price for these six companies and it is easy to see that around January 2022, they all began to take a hit in their price. This begged the question, were there any indicators that this was going to happen? In order to attack this, I decided to investigate the short- and long-term moving averages for each stock, specifically the exponential moving average. An exponential moving average calculates the average of the prices using a weighting multiplier that assigns more weight to later data. In general, when a short-term EMA crosses a long-term EMA, this signifies either a price increase or decrease.\nTo calculate this, I had to make a new data set with the dates extending further back in order to get more observations for the moving averages. I also calculated the average price so it can be used as the y-variable.\n\npricesMA &lt;-\n  prices |&gt;\n  group_by(stock_symbol) |&gt;\n  filter(stock_symbol == c(\"NFLX\", \"ADBE\", \"TSLA\", \"MSFT\", \"NVDA\", \"META\")) |&gt;\n  pivot_longer(cols = 3:6,\n               values_to = \"price\",\n               names_to = \"market\")\n\npricesMA &lt;-\n  pricesMA |&gt;\n  group_by(stock_symbol, date) |&gt;\n  summarise(avgPrice = mean(price))\n\nprices_select &lt;-\n  prices |&gt;\n  filter(stock_symbol == c(\"NFLX\", \"ADBE\", \"TSLA\", \"MSFT\", \"NVDA\", \"META\"))\n\n\n\nPlot 2\n\npricesMA |&gt;\n  ggplot(aes(x = date,\n             y = avgPrice)) +\n  geom_ma(ma_fun = EMA,\n          n = 50,\n          aes(color = \"50 EMA\"))+\n  geom_ma(ma_fun = EMA,\n          n = 200,\n          aes(color = \"200 EMA\")) +\n  facet_wrap(vars(stock_symbol),\n             scales = \"free_y\") +\n    scale_x_date(date_breaks = \"4 year\",\n                 date_labels = \"%b %y\") +\n  labs(y = \"Dollars ($)\",\n       colour = \"Moving Averages\",\n       title = \"Short- and Long-Term EMA Compared to Closing Prices, 2010-2023\",\n       caption = \"(based on data from Yahoo Finance via Kaggle)/nEMAs are calculated from library(tidyquant)\") +\n  theme(axis.text.x = element_text(angle = 45,\n                                   hjust = 1,\n                                   vjust = 1),\n        plot.title = element_text(size = 16,\n                                  hjust = 0),\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 14),\n        panel.spacing = unit(1, \"lines\"),\n        strip.text.x = element_text(color = \"black\", \n                                    face = \"bold\"),\n        strip.background = element_rect(colour = \"black\",\n                                        fill = \"white\"),\n        legend.title = element_blank()) +\n  geom_line(data = prices_select,\n            aes(x = date,\n                y = close),\n            linetype = 1,\n            color = \"black\",\n            alpha = .2)\n\n\n\n\nConclusion:\nIn this plot, I plotted the moving averages against the closing prices from Plot 1 except this time I faceted by each company in order to compare the companies individually. This leads us to our answer to the original question of if there is a trend or indicator of the price decrease. Typically, when a short-term EMA crosses above the long-term EMA, this is a signal that price might continue to move up. On the opposite hand, this means that if short-term EMA crosses below long-term EMA, price might continue to move down. In every company shown, up until the closing price drop, the short-term was above the long-term. Once the gap between them closed, and short-term came closer to long-term, the closing prices began to decrease. In some of the companies, the short-term even dipped below the long term. In conclusion, using moving averages can be a good indicator for these companies prices going down, but likely isn’t the root of the scenario. That can be left to many other more complex factors.\nConnections to Class: I used many techniques we used in class. The three main ones were changing theme elements, faceting, and using a color scale."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DataVizBlog",
    "section": "",
    "text": "Finding Indicators for Stock Prices\n\n\n\n\n\n\n\nfinance\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nFeb 9, 2024\n\n\nEric Seltzer\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog-post-2.html",
    "href": "blog-post-2.html",
    "title": "What Stats Affect Soccer the Most",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidyquant)\n\nLoading required package: PerformanceAnalytics\nLoading required package: xts\nLoading required package: zoo\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\n######################### Warning from 'xts' package ##########################\n#                                                                             #\n# The dplyr lag() function breaks how base R's lag() function is supposed to  #\n# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #\n# source() into this session won't work correctly.                            #\n#                                                                             #\n# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #\n# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #\n# dplyr from breaking base R's lag() function.                                #\n#                                                                             #\n# Code in packages is not affected. It's protected by R's namespace mechanism #\n# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #\n#                                                                             #\n###############################################################################\n\nAttaching package: 'xts'\n\nThe following objects are masked from 'package:dplyr':\n\n    first, last\n\n\nAttaching package: 'PerformanceAnalytics'\n\nThe following object is masked from 'package:graphics':\n\n    legend\n\nLoading required package: quantmod\nLoading required package: TTR\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\nlibrary(ggrepel)\nlibrary(here)\n\nhere() starts at /Users/ericseltzer/RStudio/DataVizBlog\n\ntheme_set(theme_minimal())\nsoccer &lt;- read_csv(here(\"data/soccer.csv\"))\n\nRows: 380 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Date, HomeTeam, AwayTeam, FTR, HTR, Referee\ndbl (16): FTHG, FTAG, HTHG, HTAG, HS, AS, HST, AST, HF, AF, HC, AC, HY, AY, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nIntroduction"
  },
  {
    "objectID": "posts/blog-post-1/blog-post-1.html",
    "href": "posts/blog-post-1/blog-post-1.html",
    "title": "Finding Indicators for Stock Prices",
    "section": "",
    "text": "Introduction:\nAfter finding a data set showing the stock prices of big tech companies, I decided I wanted to investigate to see if there were any correlations to find trends in how their prices perform. This dataset began in 2010 and went to January of 2023 so I decided to cut down the time frame to the most recent five years. I also chose to use the six companies in this dataset with the highest observed closing prices. This allows for less clutter in my visualizations.\n\npricesNew &lt;-\n  prices |&gt;\n  filter(date &gt; '2018-01-01')\n\nprices |&gt;\n  group_by(stock_symbol) |&gt;\n  summarise(max = max(close)) |&gt;\n  arrange(desc(max)) |&gt;\n  head(n = 6)\n\n# A tibble: 6 × 2\n  stock_symbol   max\n  &lt;chr&gt;        &lt;dbl&gt;\n1 NFLX          692.\n2 ADBE          688.\n3 TSLA          410.\n4 META          382.\n5 MSFT          343.\n6 NVDA          334.\n\npricesNew &lt;- \n  pricesNew|&gt;\n  group_by(stock_symbol) |&gt;\n  filter(stock_symbol == c(\"NFLX\", \"ADBE\", \"TSLA\", \"MSFT\", \"NVDA\", \"META\"))\n\n\nPlot 1\n\npricesNew |&gt;\n  ggplot(aes(x = date,\n             y = close)) +\n  geom_line(aes(color = stock_symbol),\n            linewidth = .9) +\n  scale_color_brewer(palette = \"Paired\") + \n  labs(x = \"Date\",\n       y = \"Closing Price ($)\",\n       title = \"Closing Stock Prices from 6 Big Tech Companies, 2018-2023\",\n       color = \"Tickers\",\n       caption = \"(based on data from Yahoo Finance via Kaggle)\") +\n  scale_x_date(date_minor_breaks = \"6 months\",\n               date_breaks = \"1 year\",\n               date_labels = \"%b %y\") +\n  theme(axis.text.x = element_text(angle = 45,\n                                   hjust = 1,\n                                   vjust = 1),\n        plot.title = element_text(size = 16,\n                                  hjust = 0),\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 14))\n\n\n\n\nMy first plot shows the change in price for these six companies and it is easy to see that around January 2022, they all began to take a hit in their price. This begged the question, were there any indicators that this was going to happen? In order to attack this, I decided to investigate the short- and long-term moving averages for each stock, specifically the exponential moving average. An exponential moving average calculates the average of the prices using a weighting multiplier that assigns more weight to later data. In general, when a short-term EMA crosses a long-term EMA, this signifies either a price increase or decrease.\nTo calculate this, I had to make a new data set with the dates extending further back in order to get more observations for the moving averages. I also calculated the average price so it can be used as the y-variable.\n\npricesMA &lt;-\n  prices |&gt;\n  group_by(stock_symbol) |&gt;\n  filter(stock_symbol == c(\"NFLX\", \"ADBE\", \"TSLA\", \"MSFT\", \"NVDA\", \"META\")) |&gt;\n  pivot_longer(cols = 3:6,\n               values_to = \"price\",\n               names_to = \"market\")\n\npricesMA &lt;-\n  pricesMA |&gt;\n  group_by(stock_symbol, date) |&gt;\n  summarise(avgPrice = mean(price))\n\nprices_select &lt;-\n  prices |&gt;\n  filter(stock_symbol == c(\"NFLX\", \"ADBE\", \"TSLA\", \"MSFT\", \"NVDA\", \"META\"))\n\n\n\nPlot 2\n\npricesMA |&gt;\n  ggplot(aes(x = date,\n             y = avgPrice)) +\n  geom_ma(ma_fun = EMA,\n          n = 50,\n          aes(color = \"50 EMA\"))+\n  geom_ma(ma_fun = EMA,\n          n = 200,\n          aes(color = \"200 EMA\")) +\n  facet_wrap(vars(stock_symbol),\n             scales = \"free_y\") +\n    scale_x_date(date_breaks = \"4 year\",\n                 date_labels = \"%b %y\") +\n  labs(y = \"Dollars ($)\",\n       colour = \"Moving Averages\",\n       title = \"Short- and Long-Term EMA Compared to Closing Prices, 2010-2023\",\n       caption = \"(based on data from Yahoo Finance via Kaggle)/nEMAs are calculated from library(tidyquant)\") +\n  theme(axis.text.x = element_text(angle = 45,\n                                   hjust = 1,\n                                   vjust = 1),\n        plot.title = element_text(size = 16,\n                                  hjust = 0),\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 14),\n        panel.spacing = unit(1, \"lines\"),\n        strip.text.x = element_text(color = \"black\", \n                                    face = \"bold\"),\n        strip.background = element_rect(colour = \"black\",\n                                        fill = \"white\"),\n        legend.title = element_blank()) +\n  geom_line(data = prices_select,\n            aes(x = date,\n                y = close),\n            linetype = 1,\n            color = \"black\",\n            alpha = .2)\n\n\n\n\nConclusion:\nIn this plot, I plotted the moving averages against the closing prices from Plot 1 except this time I faceted by each company in order to compare the companies individually. This leads us to our answer to the original question of if there is a trend or indicator of the price decrease. Typically, when a short-term EMA crosses above the long-term EMA, this is a signal that price might continue to move up. On the opposite hand, this means that if short-term EMA crosses below long-term EMA, price might continue to move down. In every company shown, up until the closing price drop, the short-term was above the long-term. Once the gap between them closed, and short-term came closer to long-term, the closing prices began to decrease. In some of the companies, the short-term even dipped below the long term. In conclusion, using moving averages can be a good indicator for these companies prices going down, but likely isn’t the root of the scenario. That can be left to many other more complex factors.\nConnections to Class: I used many techniques we used in class. The three main ones were changing theme elements, faceting, and using a color scale."
  }
]